image: node:14.8.0-stretch

services:
  - postgres:12.4-alpine
  - redis:6.0.6-alpine

variables:
  POSTGRES_DB: schroedinger
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: postgres
  POSTGRES_HOST_AUTH_METHOD: trust

stages:
  - test
  - deploy

test-stage:
  stage: test
  script:
    - apt-get update
    - apt-get install musl-dev -y
    - ln -s /usr/lib/x86_64-linux-musl/libc.so /lib/libc.musl-x86_64.so.1
    - echo "$BACKEND_DOT_ENV_TEST" >> .env.test
    - npm install
    - npm run lint
    - npm run migrate-test
    - npm run test-test
  coverage: /All\sfiles.*?\s+(\d+.\d+)/

deploy-stage:
  stage: deploy
  script:
    - apt-get update -qq
    - 'which ssh-agent || ( apt-get install -qq openssh-client )'
    - eval $(ssh-agent -s)
    - ssh-add <(echo "$SSH_PRIVATE_KEY")
    - mkdir -p ~/.ssh
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
    - ssh $USER_AND_HOST "cd $CI_PROJECT_NAME && git stash && git pull && echo \"$BACKEND_DOT_ENV_PRODUCTION\" >> .env && docker-compose up -d --build && sleep 10 && curl --silent --show-error --fail http://localhost:3000/health --retry 5 --retry-delay 5 --retry-connrefused"
  only:
    - master
