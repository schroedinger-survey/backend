stages:
  - test
  - deploy

test-stage:
  image: registry.gitlab.com/schroedinger-survey/backend:gitlabci
  stage: test
  script:
    - service elasticsearch start
    - service postgresql start
    - npm install --silent
    - npm run lint
    - npm run migrate-test
    - npm run test-test
  coverage: /All\sfiles.*?\s+(\d+.\d+)/
  services:
    - name: rabbitmq:3.8.8-management
      alias: rabbitmq
  variables:
    RABBITMQ_DEFAULT_USER: admin
    RABBITMQ_DEFAULT_PASS: password
    POSTGRES_HOST: localhost
    POSTGRES_DB: schroedinger
    POSTGRES_USER: postgres
    POSTGRES_PASSWORD: postgres
    ELASTIC_HOST: localhost:9200
    RABBITMQ_HOST: rabbitmq
    RABBITMQ_USER: admin
    RABBITMQ_PASSWORD: password

    SCHROEDINGER_BACKEND_PORT: 3000
    SCHROEDINGER_WORKER_PORT: 3001
    SCHROEDINGER_SOCKET_PORT: 3002
    SCHROEDINGER_FRONTEND_PORT: 3003
    SCHROEDINGER_MAIL_PASSWORD: password
    SCHROEDINGER_MAIL_SENDER: noreply@schroedinger-survey.de
    SCHROEDINGER_MAIL_SERVER: smtp.ionos.de
    SCHROEDINGER_MAIL_QUEUE: mail-queue
    SCHROEDINGER_FRONTEND_URL: schroedinger-survey.de
    SCHROEDINGER_JWT_TTL: 300
    SCHROEDINGER_JWT_SECRET: bah23h$(gHHZ9
    SCHROEDINGER_BCRYPT_ROUND: 1
    SCHROEDINGER_RECAPTCHA_SECRET: 6LeIxAcTAAAAAGG-vFI1TnRWxMZNFuojJ4WifJWe
  tags:
    - docker
  except:
    changes:
    - README.md
    - LICENSE
    - .gitignore
    - .dockerignore
    - docs

deploy-stage:
  stage: deploy
  script:
    - cd /schroedinger/backend/configurations && git stash && git pull
    - cd /schroedinger/backend && git stash && git pull && docker-compose --env-file ./configurations/.env up -d --build
  only:
    - master
  tags:
    - shell
  except:
    changes:
    - README.md
    - LICENSE
    - .gitignore
    - .docke
