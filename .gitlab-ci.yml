stages:
  - test
  - deploy

test-stage:
  image: node:14.8.0-stretch
  stage: test
  script:
    - npm config set cache /cache/backend_node_modules --global
    - npm install
    - npm run lint
    - npm run index-test
    - npm run migrate-test
    - npm run test-test
  coverage: /All\sfiles.*?\s+(\d+.\d+)/
  services:
  - name: postgres:12.4-alpine
    alias: postgres
  - name: redis:6.0.6-alpine
    alias: redis
  - name: docker.elastic.co/elasticsearch/elasticsearch:7.9.1
    alias: elasticsearch
    command: [ "bin/elasticsearch", "-Expack.security.enabled=false", "-Ediscovery.type=single-node", "-Estack.templates.enabled=false"]
  - name: rabbitmq:3.8.8-management
    alias: rabbitmq
  - name: mongo:3.6.20-xenial
    alias: mongo
  variables:
    POSTGRES_DB: schroedinger
    POSTGRES_USER: postgres
    POSTGRES_PASSWORD: postgres
    POSTGRES_HOST_AUTH_METHOD: trust
    RABBITMQ_DEFAULT_USER: admin
    RABBITMQ_DEFAULT_PASS: averysecuredpassword
    MONGO_INITDB_DATABASE: schroedinger
    MONGO_INITDB_ROOT_USERNAME: mongo
    MONGO_INITDB_ROOT_PASSWORD: mongo
  cache:
    untracked: true
    key: schroedinger_backend_node_modules
    paths:
    - node_modules/
  tags:
    - docker

deploy-stage:
  stage: deploy
  script:
    - cd /schroedinger/backend/configurations && git stash && git pull
    - cd /schroedinger/backend && cp configurations/.env .
    - git stash && git pull && docker-compose up -d --build
  only:
    - master
  tags:
    - shell
